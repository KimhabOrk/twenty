name: Release Twenty
on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        description: Version to release, without the v (e.g. 1.2.3)
      ref:
        default: main
        description: Ref to start the release from (e.g. main, sha)
      create_release:
        type: boolean
        default: true
        description: Create a release after merging the PR

jobs:
  create_pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.ref }}

      - name: Sanitize version
        id: sanitize
        run: |
          echo version=$(echo ${{ github.event.inputs.version }} | sed 's/^v//') >> $GITHUB_OUTPUT

      - name: Update versions
        working-directory: packages
        run: |
          for dir in twenty-docs twenty-emails twenty-front twenty-server twenty-ui twenty-website
          do
            cd $dir
            yarn version ${{ steps.sanitize.outputs.version }}
            cd ..
          done

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
            branch: release/${{ steps.sanitize.outputs.version }}
            commit_message: "chore: release v${{ steps.sanitize.outputs.version }}"
            committer: Github Action Deploy <github-action-deploy@twenty.com>
            author: Github Action Deploy <github-action-deploy@twenty.com>
            labels: release

  release:
    runs-on: ubuntu-latest
    needs: create_pr
    if: github.event.pull_request.labels.*.name contains 'release' && github.event.pull_request.merged == true
    steps:
      - name: Debug
        run: |
          echo "Merged PR: ${{ github.event.pull_request.number }}"
      # - uses: release-drafter/release-drafter@v5
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
